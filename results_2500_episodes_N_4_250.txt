          fun: -418.0
    func_vals: array([ 2.93447736e+06, -4.18000000e+02, -2.78080367e+02])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
             kernel=1**2 * Matern(length_scale=[1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1),
             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,
             optimizer='fmin_l_bfgs_b', random_state=618634690), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
             kernel=1**2 * Matern(length_scale=[1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1),
             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,
             optimizer='fmin_l_bfgs_b', random_state=618634690), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
             kernel=1**2 * Matern(length_scale=[1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1),
             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,
             optimizer='fmin_l_bfgs_b', random_state=618634690)]
 random_state: <mtrand.RandomState object at 0x7fded8095480>
        space: Space([Real(low=0.0, high=1.0, prior='uniform', transform='normalize'),
       Real(low=0.0, high=1.0, prior='uniform', transform='normalize'),
       Real(low=0.0, high=1.0, prior='uniform', transform='normalize')])
        specs: {'args': {'n_jobs': 1, 'kappa': 1.96, 'xi': 0.01, 'n_restarts_optimizer': 5, 'n_points': 10000, 'callback': None, 'verbose': True, 'random_state': <mtrand.RandomState object at 0x7fded8095480>, 'y0': None, 'x0': None, 'acq_optimizer': 'auto', 'acq_func': 'gp_hedge', 'n_random_starts': 1, 'n_calls': 3, 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
             kernel=1**2 * Matern(length_scale=[1, 1, 1], nu=2.5),
             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,
             optimizer='fmin_l_bfgs_b', random_state=618634690), 'dimensions': Space([Real(low=0.0, high=1.0, prior='uniform', transform='normalize'),
       Real(low=0.0, high=1.0, prior='uniform', transform='normalize'),
       Real(low=0.0, high=1.0, prior='uniform', transform='normalize')]), 'func': <function train_and_optimize at 0x7fdee8b47730>}, 'function': 'base_minimize'}
            x: [1.0, 0.0, 1.0]
      x_iters: [[0.29349052723372976, 0.7885110164881628, 0.08194497273173908], [1.0, 0.0, 1.0], [0.11644405345729184, 0.7874035434851275, 0.3284451803002331]]